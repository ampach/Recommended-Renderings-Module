<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <contentSearch>
      <indexConfigurations>
        <!-- If no configuration is specified for an index, it uses the default configuration. The configurations are not merged if the index also has a
             configuration. The system uses either the default configuration or the index configuration. -->
        <RecommendedRenderings type="Sitecore.ContentSearch.LuceneProvider.LuceneIndexConfiguration, Sitecore.ContentSearch.LuceneProvider">

          <!-- This flag will index all fields by default. This allows new fields in your templates to automatically be included into the index.
								 You have two choices :

								 1) Set this to 'true' and place all the fields that you would like to remove in the 'ExcludeField' list.
								 2) Set to false and place all fields you would like to be indexed in the 'IncludeField' list below.
						-->
          <indexAllFields>false</indexAllFields>

          <!-- Should index Initialize() method be called as soon as the index is added or wait for an external trigger -->
          <initializeOnAdd>true</initializeOnAdd>

          <!-- Re-use from the default lucene configuration.. -->
          <Analyzer ref="contentSearch/indexConfigurations/defaultLuceneIndexConfiguration/analyzer"/>

          <fieldMap ref="contentSearch/indexConfigurations/defaultLuceneIndexConfiguration/fieldMap">
            <fieldNames hint="raw:AddFieldByFieldName">
              <field fieldName="Allowed Controls" storageType="YES" indexType="UN_TOKENIZED" vectorType="NO" boost="1f" type="System.String" settingType="Sitecore.ContentSearch.LuceneProvider.LuceneSearchFieldConfiguration, Sitecore.ContentSearch.LuceneProvider"/>
              <field fieldName="Placeholder Key" storageType="YES" indexType="TOKENIZED" vectorType="NO" boost="1f" type="System.String" settingType="Sitecore.ContentSearch.LuceneProvider.LuceneSearchFieldConfiguration, Sitecore.ContentSearch.LuceneProvider"/>
              </fieldNames>
          </fieldMap>

          <!-- Re-use from the default lucene configuration.. -->
          <fieldReaders ref="contentSearch/indexConfigurations/defaultLuceneIndexConfiguration/fieldReaders"/>

          <virtualFieldProcessors hint="raw:AddVirtualFieldProcessor">
            <virtualFieldProcessor fieldName="daterange"        type="Sitecore.ContentSearch.VirtualFields.DateRangeFieldProcessor, Sitecore.ContentSearch"/>
            <virtualFieldProcessor fieldName="updateddaterange" type="Sitecore.ContentSearch.VirtualFields.UpdatedDateRangeFieldProcessor, Sitecore.ContentSearch"/>
            <virtualFieldProcessor fieldName="_lastestversion"  type="Sitecore.ContentSearch.VirtualFields.LatestVersionFieldProcessor, Sitecore.ContentSearch"/>
            <virtualFieldProcessor fieldName="_url"             type="Sitecore.ContentSearch.VirtualFields.UniqueIdFieldProcessor, Sitecore.ContentSearch"/>
          </virtualFieldProcessors>

          <!-- INCLUDE TEMPLATES IN INDEX
								This setting allows you to only include items that are based on specific templates in the index. You must specify all the
								templates that you want to include, because template inheritance is not checked.
								When you enable this setting, all the items that are based on other templates are excluded, regardless of whether the template
								is specified in the ExcludeTemplate list or not.
					-->
          <include hint="list:IncludeTemplate">
          </include>

          <!-- INCLUDE FIELDS IN INDEX
								This setting allows you to specify which fields to include in the index when the indexAllFields setting is set to false.
					-->
          <include hint="list:IncludeField">
            <fieldId>{7256BDAB-1FD2-49DD-B205-CB4873D2917C}</fieldId>
            <fieldId>{E391B526-D0C5-439D-803E-17512EAE6222}</fieldId>
          </include>

          <!-- COMPUTED INDEX FIELDS
								This setting allows you to add fields to the index that contain values that are computed for the item that is being indexed.
								You can specify the storageType and indextype for each computed index field in the <fieldMap><fieldNames> section.
					-->
          <fields hint="raw:AddComputedIndexField">
            <field fieldName="recommended_rendering" storageType="YES" indexType="TOKENIZED">RecommendedRenderings.Search.Fields.RecommendedRenderingsComputedField, RecommendedRenderings</field>
          </fields>

          <!-- Re-use from the default lucene configuration.. -->
          <Analyzer ref="contentSearch/indexConfigurations/defaultLuceneIndexConfiguration/analyzer"/>
          <indexFieldStorageValueFormatter ref="contentSearch/indexConfigurations/defaultLuceneIndexConfiguration/indexFieldStorageValueFormatter"/>
          <indexDocumentPropertyMapper ref="contentSearch/indexConfigurations/defaultLuceneIndexConfiguration/indexDocumentPropertyMapper"/>

          <!-- DOCUMENT BUILDER
               Allows you to override the document builder. The document builder class processes all the fields in the Sitecore items and prepares
               the data for storage in the index.
               You can override the document builder to modify how the data is prepared, and to apply any additional logic that you may require.
          -->
          <documentBuilderType>Sitecore.ContentSearch.LuceneProvider.LuceneDocumentBuilder, Sitecore.ContentSearch.LuceneProvider</documentBuilderType>
        </RecommendedRenderings>
      </indexConfigurations>
    </contentSearch>
  </sitecore>
</configuration>
